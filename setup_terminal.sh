#!/bin/bash

clear
echo -e "\n\033[1;32müöÄ Iniciando a configura√ß√£o WSL UBUNTU...\033[0m"

while true; do
    echo -e "\n\033[1;34m‚öôÔ∏è  Escolha uma op√ß√£o:\033[0m"
    echo -e "0) Cancelar e sair"
    echo -e "1) Remover configura√ß√£o"
    echo -e "2) Instalar novamente"
    read -p "üëâ Digite o n√∫mero correspondente (0, 1 ou 2): " OPTION
    case "$OPTION" in
        0) echo -e "\n\033[1;33mOpera√ß√£o cancelada.\033[0m"; exit ;;
        1) 
            echo -e "\n\033[1;31müîÑ Removendo configura√ß√£o...\033[0m"
            source remove_setup.sh
            exit ;;
        2) 
            echo -e "\n\033[1;32müîÑ Iniciando nova instala√ß√£o...\033[0m"
            break ;;
        *) 
            echo -e "\033[1;31mResposta inv√°lida! Escolha 0, 1 ou 2.\033[0m" ;;
    esac
done

echo -e "\n\033[1;32m‚úÖ HOME: \033[0m" $HOME
echo -e "\n\033[1;32m‚úÖ SHELL: \033[0m" $SHELL

# .sh para verificar depend√™ncias instaladas
source verify_dependencies.sh
# .sh para verificar pr√© requisitos (sudo, apt)
source prerequisite_check.sh

echo -e "\n\033[1;33m‚ú® Pacotes para instala√ß√£o:\033[0m"
echo -e "\033[1;36m- Git\033[0m"
echo -e "\033[1;36m- Curl\033[0m"
echo -e "\033[1;36m- Neovim\033[0m"
echo -e "\033[1;36m- Htop\033[0m"
echo -e "\033[1;36m- Tmux\033[0m"
echo -e "\033[1;36m- Fish\033[0m: Como alternativa ao Bash."
echo -e "\033[1;36m- Zsh\033[0m: Como alternativa ao Bash."
echo -e "\033[1;36m- Oh My Zsh\033[0m: Gerencia configura√ß√£o do Zsh."
echo -e "\033[1;36m- Powerlevel10k\033[0m: Tema para Zsh."
echo -e "\033[1;36m- Plugins do Zsh (zsh-autosuggestions e zsh-syntax-highlighting)\033[0m"
echo -e "\n\033[1;33m‚ö†Ô∏è  Alguns desses pacotes t√™m depend√™ncias espec√≠ficas:\033[0m"
echo -e "\033[1;36m- Git\033[0m Necess√°rio para instalar plugins como o Powerlevel10k e o zsh-autosuggestions."
echo -e "\033[1;36m- Curl\033[0m Necess√°rio para instalar o Oh My Zsh e outros pacotes.\033[0m"

while true; do
    echo -e "\n\033[1;34m‚öôÔ∏è  Voc√™ deseja continuar com a instala√ß√£o?\033[0m"
    echo -e "1) Sim, continuar"
    echo -e "2) N√£o, cancelar"
    read -p "üëâ Digite o n√∫mero correspondente (1 ou 2): " choice

    case "$choice" in
        1) break ;;  # Prossegue com a instala√ß√£o
        2) echo -e "\n\033[1;31m‚ùå Instala√ß√£o cancelada pelo usu√°rio.\033[0m\n"; exit 0 ;;
        *) echo -e "\033[1;31mResposta inv√°lida! Digite 1 para continuar ou 2 para cancelar.\033[0m" ;;
    esac
done

# .sh para escolher qual shell (zsh ou fish)
source shell_choice.sh
# .sh para verificar op√ß√µes de instala√ß√£o do usu√°rio
source ask_install.sh
# .sh com instala√ß√£o dos pacotes selecionados
source install_packages.sh
# configura√ß√£o do shell escolhido (shell_choice)
source $SHELL_CONFIG_SCRIPT

# shell padr√£o
while true; do
    CURRENT_SHELL=$(basename "$SHELL")
    echo -e "\n\033[1;34m‚öôÔ∏è  Deseja tornar o $SHELL_NAME como o seu SHELL padr√£o?\033[0m"
    echo -e "1) Sim, alterar para $SHELL_NAME"
    echo -e "2) N√£o, manter o shell atual ($CURRENT_SHELL)"
    read -p "üëâ Digite o n√∫mero correspondente (1 ou 2): " choice

    case "$choice" in
        1 ) 
            SHELL_PATH="$(command -v $SHELL_NAME)"
            if [ -n "$SHELL_PATH" ]; then
                chsh -s "$SHELL_PATH"
                echo -e "\n‚úÖ Shell padr√£o alterado para: $SHELL_NAME ($SHELL_PATH)"
            else
                echo -e "\n\033[1;31m‚ùå Erro: O shell $SHELL_NAME n√£o foi encontrado.\033[0m"
            fi
            break
            ;;
        2 ) 
            echo -e "\nüõë Altera√ß√£o de shell cancelada."
            break
            ;;
        * ) 
            echo -e "\033[1;31mResposta inv√°lida! Por favor, digite '1' para sim ou '2' para n√£o.\033[0m"
            ;;
    esac
done

echo -e "\n\033[1;32m‚úÖ SHELL padr√£o:\033[0m" $SHELL
echo -e "\n\033[1;32m‚úÖ Configura√ß√£o do $SHELL_NAME conclu√≠da!\033[0m\n"

export SHELL="$(command -v $SHELL_NAME)"
exec "$SHELL"